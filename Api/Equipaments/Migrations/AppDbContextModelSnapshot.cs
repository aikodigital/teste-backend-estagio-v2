// <auto-generated />
using System;
using Equipments.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Equipments.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Equipments.Models.Equipment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("equipment_model_id")
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("equipment_model_id");

                    b.ToTable("equipment");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_Model", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("equipment_model");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_Model_State_Hourly_Earnings", b =>
                {
                    b.Property<Guid>("equipment_model_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("equipment_state_id")
                        .HasColumnType("uuid");

                    b.Property<double>("value")
                        .HasColumnType("double precision");

                    b.HasKey("equipment_model_id", "equipment_state_id");

                    b.HasIndex("equipment_state_id");

                    b.ToTable("equipment_model_state_hourly_earnings");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_Position_History", b =>
                {
                    b.Property<Guid>("equipment_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("lat")
                        .HasColumnType("double precision");

                    b.Property<double>("lon")
                        .HasColumnType("double precision");

                    b.HasKey("equipment_id");

                    b.ToTable("equipment_position_history");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_State", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("color")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("equipment_state");
                });

            modelBuilder.Entity("Equipments.Models.Equipment", b =>
                {
                    b.HasOne("Equipments.Models.Equipment_Model", "equipment_model")
                        .WithMany("equipments")
                        .HasForeignKey("equipment_model_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipment_model");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_Model_State_Hourly_Earnings", b =>
                {
                    b.HasOne("Equipments.Models.Equipment_Model", "equipment_model")
                        .WithMany("hourlyEarnings")
                        .HasForeignKey("equipment_model_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipments.Models.Equipment_State", "equipment_state")
                        .WithMany("hourlyEarnings")
                        .HasForeignKey("equipment_state_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipment_model");

                    b.Navigation("equipment_state");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_Position_History", b =>
                {
                    b.HasOne("Equipments.Models.Equipment", "equipment")
                        .WithMany("positions")
                        .HasForeignKey("equipment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipment");
                });

            modelBuilder.Entity("Equipments.Models.Equipment", b =>
                {
                    b.Navigation("positions");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_Model", b =>
                {
                    b.Navigation("equipments");

                    b.Navigation("hourlyEarnings");
                });

            modelBuilder.Entity("Equipments.Models.Equipment_State", b =>
                {
                    b.Navigation("hourlyEarnings");
                });
#pragma warning restore 612, 618
        }
    }
}
